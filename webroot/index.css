:root {
  --red-1: #941b1b;
  --red-2: red;
  --div-color: #656565;
  --div-color2: #444444;
  --green: #00bf00;
  --state-1: #fff;
  --state-2: #bbb;
  --accept-state-1: #c4e9c4;
  --accept-state-2: #95df95;
  --mark-epsilon: black;
  --mark-epsilon-bg: #9f9f9f;
  --radius-big: 10px;
  --radius-small: 5px;
  --test-string-len: 100px;
}

#title-web,
#web-desc {
  text-align: center;
  padding: 0;
  margin: 0;
}

body {
  font-family: "Lucida Console", "Courier New", monospace;
  color: white;
  background-color: #1f1f1f;
  overflow-y: scroll;
  overflow-x: hidden;
}

a {
  color: inherit;
  padding: inherit;
  text-decoration: none;
}

#body-grid {
  display: grid;
  gap: 10px;
  max-width: 100%;
  padding-top: 10px;
  padding-bottom: var(--test-string-len);
}

#form-grid {
  display: grid;
  grid-template-columns: 16% auto 10%;
  gap: 8px;
}

#compile-button {
  grid-area: 1 / 3 / 3 / 4;
}

#test-regex {
  grid-area: 3 / 2 / 4 / 4;
}

#github-logo,
#str-input,
#error-message,
#transitions,
#test-string-output-footer {
  background-color: var(--div-color);
  padding: 0.5rem;
  border-radius: var(--radius-big);
}

#github-logo{
  display:inline-block;
  height:1.5rem;
}

#header-grid {
  position: sticky;
  top: 0px;
  left: 0px;
  display: grid;
  gap: 10px;
  max-width: 100%;
  z-index: 2;
  background-color: var(--div-color2);
  border-radius: var(--radius-big);
  padding: 10px;
}

#error-message {
  display: none;
  background-color: var(--red-1);
  white-space: pre;
  overflow-x: scroll;
}

#fsm-type {
  display: grid;
  grid-template-columns: auto auto auto;
  text-align: center;
}

.no-fsm-yet {
  opacity: 50%;
}

#fsm-type div {
  background-color: black;
  border-radius: var(--radius-small);
  gap: 5px;
  margin: 0 5px;
  cursor: pointer;
}

#fsm-type div.selected-fsm {
  background-color: white;
  color: black;
  cursor: default;
}


#test-string-output div {
  display: inline-block;
  border-radius: var(--radius-small);
  background-color: var(--state-1);
  color: black;
  padding: 0.375rem;
  margin: 0 0.125rem;
  cursor: pointer;
}

#test-string-output>div.error {
  color: white;
  background-color: var(--red-1);
}

#test-string-output>div.accept {
  color: white;
  background-color: var(--accept-state-2);
}

.tooltip-bottom,
.tooltip-right {
  visibility: hidden;
  position: absolute;
  text-align: center;
  border-radius: var(--radius-small);
  background-color: black;
  color: white;
  z-index: 2;
  font-size: 1rem;
  padding: 2% 5%;
  width: 100%;
}

.tooltip-bottom {
  top: 100%;
  left: 45%;
  margin-left: -50%;
}

.tooltip-right {
  left: 100%;
  border-radius: var(--radius-small);
}

.tooltip-show {
  position: relative;
  text-decoration: underline dotted;
}

.tooltip-show:hover :is(.tooltip-bottom, .tooltip-right) {
  visibility: visible;
}

#transitions {
  color: black;
  box-sizing: border-box;
  border-collapse: collapse;
  margin-top: 10px;
}

#transitions tr th div {
  font-size: 1.25rem;
  padding: 0.25rem;
  border-radius: var(--radius-big);
  background-color: black;
  color: white;
}

#transitions tr :is(td, th) div {
  margin: 1px;
  padding: 0.375rem 0;
}

#transitions tr :is(td, th):first-child {
  text-align: center;
}

#transitions tr td:nth-child(2) div {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  margin: 0 0.125rem;
  display: inline-block;
  cursor: pointer;
}

#transitions tr td div {
  background-color: var(--state-1);
  border-radius: var(--radius-big);
}

#transitions tr td div.accept-state {
  background-color: var(--accept-state-1);
}

#transitions tr:nth-child(even) td div {
  background-color: var(--state-2);
}

#transitions tr:nth-child(even) td div.accept-state {
  background-color: var(--accept-state-2);
}

#transitions tr:nth-child(1) td div {
  background-color: var(--red-1);
  color: #fff;
}

.mark {
  background-color: black;
  color: white;
  border-radius: var(--radius-small);
  padding: 0.125rem 0.25rem;
  font-size: 1rem;
  vertical-align: middle;
}

.mark.error {
  background-color: var(--red-2);
}

.mark.accept {
  background-color: var(--green);
}

.mark.epsilon {
  background-color: var(--mark-epsilon-bg);
  color: var(--mark-epsilon);
}

#transitions tr {
  transition-duration: 0.25s;
  transition-timing-function: ease-out;
}

.highlight-state,
.highlight-state * {
  transition-duration: 0.25s;
  transition-timing-function: ease-out;
  background-color: black !important;
  color: white !important;
}